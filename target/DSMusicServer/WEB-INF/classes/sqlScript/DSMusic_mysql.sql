DROP DATABASE IF EXISTS DSMUSIC;

CREATE DATABASE IF NOT EXISTS DSMUSIC;

USE DSMUSIC;

CREATE TABLE IF NOT EXISTS USER_CRED (USERNAME VARCHAR(20) NOT NULL, PASSWORD VARCHAR(300) NOT NULL, SALT VARCHAR(300) NOT NULL, PRIMARY KEY (USERNAME));

CREATE TABLE IF NOT EXISTS DSMUSIC_USER (USERNAME VARCHAR(20) NOT NULL, EMAIL VARCHAR(40), F_NAME VARCHAR(30) NOT NULL, L_NAME VARCHAR(30), PHN BIGINT(12), PRIMARY KEY (USERNAME));

CREATE TABLE IF NOT EXISTS AUDIO (AUDIO_ID VARCHAR(60) NOT NULL, NAME VARCHAR(100) NOT NULL, ALBUM VARCHAR(100), USERNAME VARCHAR(20), ARTIST VARCHAR(100), DATE_CREATED VARCHAR(15), DEL_FLAG CHAR(1) DEFAULT 'N', DURATION BIGINT(20), GENRES VARCHAR(30), REL_FILE_PATH VARCHAR(100), YEAR INTEGER, PRIMARY KEY (AUDIO_ID));

CREATE TABLE IF NOT EXISTS TRACK (USERNAME VARCHAR(20) NOT NULL, AUDIO_COUNT INTEGER NOT NULL DEFAULT 0, PLAYLIST_COUNT INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (USERNAME));

CREATE TABLE IF NOT EXISTS PLAYLIST (PLAYLIST_ID VARCHAR(40) NOT NULL, DEL_FLAG CHAR(1) DEFAULT 'N', PLAYLIST_NAME VARCHAR(40) NOT NULL, USERNAME VARCHAR(20) NOT NULL, PRIMARY KEY (PLAYLIST_ID));

CREATE TABLE IF NOT EXISTS PLAYLIST_AUDIO ( PLAYLIST_ID VARCHAR(40) NOT NULL, AUDIO_ID VARCHAR(40) NOT NULL);


ALTER TABLE DSMUSIC_USER ADD CONSTRAINT FK_DSMUSIC_USER FOREIGN KEY (USERNAME) REFERENCES USER_CRED(USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE AUDIO ADD CONSTRAINT FK_AUDIO FOREIGN KEY (USERNAME) REFERENCES DSMUSIC_USER(USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE TRACK ADD CONSTRAINT FK_TRACK FOREIGN KEY (USERNAME) REFERENCES DSMUSIC_USER(USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PLAYLIST ADD CONSTRAINT FK_PLAYLIST FOREIGN KEY (USERNAME) REFERENCES DSMUSIC_USER(USERNAME) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PLAYLIST_AUDIO ADD CONSTRAINT FK_PLAYLIST_AUDIO_PLAYLIST FOREIGN KEY(PLAYLIST_ID) REFERENCES PLAYLIST(PLAYLIST_ID) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PLAYLIST_AUDIO ADD CONSTRAINT FK_PLAYLIST_AUDIO_AUDIO FOREIGN KEY(AUDIO_ID) REFERENCES AUDIO(AUDIO_ID) ON DELETE CASCADE ON UPDATE CASCADE;